{"version":3,"sources":["components/Header/Header.module.css","components/Loader/Loader.module.css","pages/PostsPage/PostItem/PostItem.module.css","components/Header/Header.js","components/Form/Form.js","redux/actionTypes.js","redux/posts/actions/postsListActionCreators.js","redux/posts/operations/createPostOperation.js","components/Form/FormContainer.js","pages/Main/Main.js","components/Loader/Loader.js","pages/PostsPage/PostItem/PostItem.js","pages/PostsPage/PostsPage.js","redux/posts/operations/deletePostOperation.js","pages/PostsPage/PostsPageContainer.js","pages/PostsPage/PostEditForm/PostEditForm.js","redux/posts/operations/updatePostOperation.js","redux/comments/operations/addCommentOperation.js","redux/comments/actions/commentActionCreators.js","pages/PostsPage/PostEditForm/PostEditFormContainer.js","components/App.js","redux/posts/operations/getAllPostsOperation.js","redux/comments/operations/getAllCommentsOperation.js","components/AppContainer.js","redux/middlewares/thunk.js","redux/posts/reducers/postsListReducer.js","redux/comments/reducers/commentsReducer.js","redux/posts/reducers/errorReducer.js","redux/posts/reducers/loadingReducer.js","redux/combinedReducer.js","redux/store.js","index.js"],"names":["module","exports","StyledHeader","styled","header","StyledNavigation","nav","StyledList","ul","Title","h1","Header","exact","to","activeClassName","styles","activeNav","className","navlink","StyledForm","form","StyledInput","textarea","StyledTextarea","StyledButton","button","Form","createPost","useState","postTitle","setPostTitle","postText","setPostText","onSubmit","e","preventDefault","newPost","id","uuid4","title","body","toast","info","position","POSITION","BOTTOM_CENTER","error","type","onChange","target","value","placeholder","actionTypes","CREATE_POST","DELETE_POST","UPDATE_POST","GET_ALL_POSTS","POSTS_LOADING","CREATE_COMMENT","GET_ALL_COMMENTS","SET_ERROR","postErrorActionCreator","payload","createPostOperation","post","dispatch","axios","then","response","createPostActionCreator","data","catch","connect","Main","Loader","ldsHourglass","StyledButtonDiv","div","PostItem","text","onDelete","onClick","StyledListItem","PostsPage","loading","posts","deletePost","map","key","deletePostOperation","delete","deletePostActionCreator","state","comments","input","StyledCommentsTitle","h3","StyledCommentsDiv","StyledCommentsUl","StyledCommentsLI","li","StyledCommentForm","StyledCommentInput","StyledButtonComment","PostEditForm","handleTitleChange","setState","buttonSaveDisabled","handleTextChange","handleSaveEdition","match","props","editedPost","params","updatePost","handleCommentTyping","commentText","addComment","commentsAboutPost","requestComment","postId","this","find","postFormList","Number","comment","filter","commentItem","disabled","length","Component","updatePostOperation","updatedPost","put","updatePostActionCreator","addCommentOperation","addCommentActionCreator","console","log","StyledWrapper","App","getAllPosts","getAllComments","path","component","getAllPostsOperation","get","getAllCommentsOperation","result","getAlLPostsOperation","thunk","getState","next","action","initialState","postsListReducer","errorReducer","loadingReducer","combinedReducer","combineReducers","commentsReducer","composeEnhancers","composeWithDevTools","applyMiddleware","store","createStore","ReactDOM","render","basename","document","getElementById"],"mappings":"wFACAA,EAAOC,QAAU,CAAC,QAAU,wBAAwB,UAAY,4B,mBCAhED,EAAOC,QAAU,CAAC,aAAe,+B,mBCAjCD,EAAOC,QAAU,CAAC,QAAU,4B,s8BCI5B,IAAMC,EAAeC,IAAOC,OAAV,KAUZC,EAAmBF,IAAOG,IAAV,KAIhBC,EAAaJ,IAAOK,GAAV,KAOVC,EAAQN,IAAOO,GAAV,KAsCIC,EAjCA,WACb,OACE,kBAACT,EAAD,KACE,kBAACO,EAAD,sBAEA,kBAACJ,EAAD,KACE,kBAACE,EAAD,KACE,4BACE,kBAAC,IAAD,CACEK,OAAK,EACLC,GAAG,IACHC,gBAAiBC,IAAOC,UACxBC,UAAWF,IAAOG,SAJpB,SAUF,4BACE,kBAAC,IAAD,CACEL,GAAG,SACHC,gBAAiBC,IAAOC,UACxBC,UAAWF,IAAOG,SAHpB,kB,kgDCzCZ,IAAMC,EAAahB,IAAOiB,KAAV,KAYVC,EAAclB,IAAOmB,SAAV,KAYXC,EAAiBpB,IAAOmB,SAAV,KAedE,EAAerB,IAAOsB,OAAV,KAwEHC,EAvDF,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACGC,mBAAS,IADZ,mBACxBC,EADwB,KACbC,EADa,OAECF,mBAAS,IAFV,mBAExBG,EAFwB,KAEdC,EAFc,KA+B/B,OACE,kBAACb,EAAD,CAAYc,SAtBO,SAAAC,GAGnB,GAFAA,EAAEC,iBAEEN,GAAaE,EAAU,CACzB,IAAMK,EAAU,CACdC,GAAIC,MACJC,MAAOV,EACPW,KAAMT,GAERJ,EAAWS,GACXK,IAAMC,KAAN,oBAAwBb,EAAxB,+BAAgE,CAC9Dc,SAAUF,IAAMG,SAASC,gBAE3Bf,EAAa,IACbE,EAAY,SAEZS,IAAMK,MAAM,2BAA4B,CACtCH,SAAUF,IAAMG,SAASC,kBAM3B,kBAACxB,EAAD,CACE0B,KAAK,OACLC,SA/BoB,SAAAd,GACxBJ,EAAaI,EAAEe,OAAOC,QA+BlBA,MAAOrB,EACPsB,YAAY,6BAEd,kBAAC5B,EAAD,CACEwB,KAAK,OACLC,SAlCmB,SAAAd,GACvBF,EAAYE,EAAEe,OAAOC,QAkCjBA,MAAOnB,EACPoB,YAAY,uBAEd,kBAAC3B,EAAD,CAAcuB,KAAK,UAAnB,iBAEA,kBAAC,IAAD,Q,gBCtGSK,EAVK,CAClBC,YAAa,cACbC,YAAa,cACbC,YAAa,cACbC,cAAe,gBACfC,cAAe,gBACfC,eAAgB,iBAChBC,iBAAkB,mBAClBC,UAAW,aCYAC,EAAyB,SAAAf,GAAK,MAAK,CAC9CC,KAAMK,EAAYQ,UAClBE,QAAS,CACPhB,WCPWiB,EAVa,SAAAC,GAAI,OAAI,SAAAC,GAClCC,IACGF,KAAK,yCAA0CA,GAC/CG,MAAK,SAAAC,GACJH,EDGiC,SAAAD,GAAI,MAAK,CAC9CjB,KAAMK,EAAYC,YAClBS,QAAS,CACPE,SCNWK,CAAwBD,EAASE,UAE3CC,OAAM,SAAAzB,GACLmB,EAASJ,EAAuBf,SCLvB0B,cACb,MALyB,SAAAP,GAAQ,MAAK,CACtCtC,WAAY,SAAAqC,GAAI,OAAIC,EAASF,EAAoBC,QAGpCQ,CAGb9C,GCAa+C,EARF,WACX,OACE,6BACE,kBAAC,EAAD,Q,iBCFSC,EADA,kBAAM,yBAAKzD,UAAWF,IAAO4D,cAAvB,M,yYCGrB,IAAMnD,GAAerB,IAAOsB,OAAV,MAWZmD,GAAkBzE,IAAO0E,IAAV,KAgCNC,GA5BE,SAAC,GAAmC,IAAjCzC,EAAgC,EAAhCA,GAAIE,EAA4B,EAA5BA,MAAOwC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAKnC,OACE,6BACE,gCAAMzC,EAAN,KADF,IACqB,+BAAKwC,EAAL,KACnB,kBAACH,GAAD,KACE,kBAAC,GAAD,CAAc7B,KAAK,SAASkC,QALf,cAMX,kBAAC,IAAD,CAASpE,GAAE,iBAAYwB,GAAMpB,UAAWF,IAAOG,SAA/C,SAKF,kBAAC,GAAD,CAAc6B,KAAK,SAASkC,QAdb,WACnBD,EAAS3C,KAaL,a,wiBC7BR,IAAM9B,GAAaJ,IAAOK,GAAV,MAWV0E,GAAiB/E,IAAOK,GAAV,MAqCL2E,GA7BG,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WACnC,OACE,iCACGF,GAAW,kBAAC,EAAD,MAEXC,GACC,kBAAC,GAAD,KACGA,EAAME,KAAI,SAAAvB,GAAI,OACb,kBAACkB,GAAD,CAAgBM,IAAKxB,EAAK3B,IACxB,kBAAC,GAAD,CACEA,GAAI2B,EAAK3B,GACTE,MAAOyB,EAAKzB,MACZwC,KAAMf,EAAKxB,KACXwC,SAAUM,WCvBXG,GAVa,SAAApD,GAAE,OAAI,SAAA4B,GAChCC,IACGwB,OADH,iDACoDrD,IACjD8B,MAAK,WACJF,EPiBiC,SAAA5B,GAAE,MAAK,CAC5CU,KAAMK,EAAYE,YAClBQ,QAAS,CACPzB,OOpBWsD,CAAwBtD,OAElCkC,OAAM,SAAAzB,GACLmB,EAASJ,EAAuBf,SCAvB0B,gBATS,SAAAoB,GAAK,MAAK,CAChCP,MAAOO,EAAMP,MACbQ,SAAUD,EAAMC,SAChBT,QAASQ,EAAMR,YAEU,SAAAnB,GAAQ,MAAK,CACtCqB,WAAY,SAAAjD,GAAE,OAAI4B,EAASwB,GAAoBpD,QAGlCmC,CAGbW,I,66FCPF,IAAMhE,GAAahB,IAAOiB,KAAV,MAYVC,GAAclB,IAAO2F,MAAV,MAaXvE,GAAiBpB,IAAOmB,SAAV,MAgBdE,GAAerB,IAAOsB,OAAV,MAqBZsE,GAAsB5F,IAAO6F,GAAV,MAGnBC,GAAoB9F,IAAO0E,IAAV,MAMjBqB,GAAmB/F,IAAOK,GAAV,MAOhB2F,GAAmBhG,IAAOiG,GAAV,MAKhBC,GAAoBlG,IAAOiB,KAAV,MAQjBkF,GAAqBnG,IAAO2F,MAAV,MAOlBS,GAAsBpG,IAAOsB,OAAV,MAwLV+E,G,YAzKb,aAAe,IAAD,8BACZ,+CAkCFC,kBAAoB,SAAAvE,GAClB,EAAKwE,SAAS,CACZC,oBAAoB,EACpB9E,UAAWK,EAAEe,OAAOC,SAtCV,EA0Cd0D,iBAAmB,SAAA1E,GACjB,EAAKwE,SAAS,CACZC,oBAAoB,EACpB5E,SAAUG,EAAEe,OAAOC,SA7CT,EAiDd2D,kBAAoB,SAAA3E,GAAM,IAAD,EACS,EAAK0D,MAA7B/D,EADe,EACfA,UAAWE,EADI,EACJA,SACX+E,EAAU,EAAKC,MAAfD,MAER,GADA5E,EAAEC,iBACEN,GAAaE,EAAU,CACzB,IAAMiF,EAAa,CACjB3E,GAAIyE,EAAMG,OAAO5E,GACjBE,MAAOV,EACPW,KAAMT,GAER,EAAKgF,MAAMG,WAAWF,GACtBvE,IAAMC,KAAN,oBAAwBb,EAAxB,8BAA+D,CAC7Dc,SAAUF,IAAMG,SAASC,qBAG3BJ,IAAMK,MAAM,2BAA4B,CACtCH,SAAUF,IAAMG,SAASC,iBAjEjB,EAsEdsE,oBAAsB,SAAAjF,GACpB,EAAKwE,SAAS,CACZU,YAAalF,EAAEe,OAAOC,SAxEZ,EA4EdmE,WAAa,WAAO,IAAD,EAC0B,EAAKzB,MAAxCwB,EADS,EACTA,YAAaE,EADJ,EACIA,kBADJ,EAEa,EAAKP,MAA3BM,EAFS,EAETA,WAEFE,EAAiB,CACrBC,OALe,EAEGV,MAGJG,OAAO5E,GACrBG,KAAM4E,GAERC,EAAWE,GACX,EAAKb,SAAS,CACZU,YAAa,GACbE,kBAAkB,GAAD,oBAAMA,GAAN,CAAyBC,OArF5C,EAAK3B,MAAQ,CACXe,oBAAoB,EACpB9E,UAAW,GACXE,SAAU,GACVqF,YAAa,GACbE,mBAAmB,GAPT,E,iFAWO,IAAD,EACiBG,KAAKV,MAAhC1B,EADU,EACVA,MAAOyB,EADG,EACHA,MAAOjB,EADJ,EACIA,SAIhB7B,EAAOqB,EAAMqC,MAAK,SAAAC,GAAY,MACP,kBAApBA,EAAatF,GAChBsF,EAAatF,KAAOyE,EAAMG,OAAO5E,GACjCsF,EAAatF,KAAOuF,OAAOd,EAAMG,OAAO5E,OAE9CoF,KAAKf,SAAS,CACZ7E,UAAWmC,GAAQA,EAAKzB,MACxBR,SAAUiC,GAAQA,EAAKxB,OAIzB,IAAMqF,EAAUhC,EAASiC,QACvB,SAAAC,GAAW,OAAIA,EAAYP,SAAWV,EAAMG,OAAO5E,MAErDoF,KAAKf,SAAS,CACZY,kBAAmBO,M,+BA4Db,IAAD,EAOHJ,KAAK7B,MALP7D,EAFK,EAELA,SACAF,EAHK,EAGLA,UACA8E,EAJK,EAILA,mBACAS,EALK,EAKLA,YACAE,EANK,EAMLA,kBAEMjC,EAAUoC,KAAKV,MAAf1B,MAER,OACE,6BACGA,GACC,kBAAC,GAAD,KACE,kBAAC,GAAD,CACEtC,KAAK,OACLC,SAAUyE,KAAKhB,kBACfvD,MAAOrB,IAGT,kBAAC,GAAD,CACEkB,KAAK,OACLC,SAAUyE,KAAKb,iBACf1D,MAAOnB,IAGT,kBAAC,GAAD,CACEgB,KAAK,SACLkC,QAASwC,KAAKZ,kBACdmB,SAAUrB,GAHZ,iBAUJ,iCACGW,EAAkBW,OAAS,GAC1B,kBAAChC,GAAD,KACE,kBAACF,GAAD,oBAEA,kBAACG,GAAD,KACGoB,EAAkB/B,KAAI,SAAAsC,GAAO,OAC5B,kBAAC1B,GAAD,CAAkBX,IAAKqC,EAAQxF,IAC7B,+BAAKwF,EAAQrF,KAAb,WAOV,kBAAC6D,GAAD,CAAmBpE,SAAUwF,KAAKJ,YAChC,kBAACf,GAAD,CACEvD,KAAK,OACLC,SAAUyE,KAAKN,oBACfjE,MAAOkE,EACPjE,YAAY,4BAEd,kBAACoD,GAAD,CAAqBxD,KAAK,UAA1B,iBAIJ,kBAAC,GAAD,KACE,kBAAC,IAAD,CAASlC,GAAG,UAAZ,wBAGF,kBAAC,IAAD,W,GA9JmBqH,aCtGZC,GAba,SAAAC,GAAW,OAAI,SAAAnE,GACzCC,IACGmE,IADH,iDAE8CD,EAAY/F,IACtD+F,GAEDjE,MAAK,WACJF,EVqBiC,SAAAmE,GAAW,MAAK,CACrDrF,KAAMK,EAAYG,YAClBO,QAAS,CACPsE,gBUxBWE,CAAwBF,OAElC7D,OAAM,SAAAzB,GACLmB,EAASJ,EAAuBf,SCPvByF,GANa,SAAAV,GAAO,OAAI,SAAA5D,GACrCC,IACGF,KADH,4CACqD6D,GAClD1D,MAAK,SAAAC,GAAQ,OAAIH,ECJiB,SAAA4D,GAAO,MAAK,CACjD9E,KAAMK,EAAYM,eAClBI,QAAS,CACP+D,YDC2BW,CAAwBpE,EAASE,UAC3DC,OAAM,SAAAzB,GAAK,OAAI2F,QAAQC,IAAI5F,QEOjB0B,gBATS,SAAAoB,GAAK,MAAK,CAChCP,MAAOO,EAAMP,MACbQ,SAAUD,EAAMC,aAES,SAAA5B,GAAQ,MAAK,CACtCiD,WAAY,SAAAkB,GAAW,OAAInE,EAASkE,GAAoBC,KACxDf,WAAY,SAAAQ,GAAO,OAAI5D,EAASsE,GAAoBV,QAGvCrD,CAGbgC,I,iICRF,IAAMmC,GAAgBxI,IAAO0E,IAAV,MAsCJ+D,G,4LAhCQ,IAAD,EACsBnB,KAAKV,MAArC8B,EADU,EACVA,YAAaC,EADH,EACGA,eACrBD,IACAC,M,+BAIA,OACE,kBAACH,GAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOI,KAAK,IAAInI,OAAK,EAACoI,UAAWvE,IAEjC,kBAAC,IAAD,CAAOsE,KAAK,aAAanI,OAAK,EAACoI,UAAWxC,KAE1C,kBAAC,IAAD,CAAOuC,KAAK,SAASC,UAAW7D,KAEhC,kBAAC,IAAD,CACEtE,GAAG,a,GAnBGqH,aCIHe,GAXc,kBAAM,SAAAhF,GACjCA,EfCyC,CACzClB,KAAMK,EAAYK,gBeDlBS,IACGgF,IAAI,0CACJ/E,MAAK,SAAAC,GfT8B,IAAAiB,EeUlCpB,GfVkCoB,EeUAjB,EAASE,KfVC,CAChDvB,KAAMK,EAAYI,cAClBM,QAAS,CACPuB,eeSCd,OAAM,SAAAzB,GACLmB,EAASJ,EAAuBf,SCPvBqG,GALiB,kBAAM,SAAAlF,GACpCC,IACGgF,IAAI,6CACJ/E,MAAK,SAAAiF,GAAM,OAAInF,GJEuB4B,EIFcuD,EAAO9E,KJER,CACtDvB,KAAMK,EAAYO,iBAClBG,QAAS,CACP+B,eAHuC,IAAAA,OKE5BrB,eACb,MANyB,SAAAP,GAAQ,MAAK,CACtC4E,YAAa,SAAAxD,GAAK,OAAIpB,EAASoF,GAAqBhE,KACpDyD,eAAgB,SAAAjD,GAAQ,OAAI5B,EAASkF,GAAwBtD,QAGhDrB,CAGboE,I,kBCXaU,GAFD,SAAC,GAAD,IAAGrF,EAAH,EAAGA,SAAUsF,EAAb,EAAaA,SAAb,OAA4B,SAAAC,GAAI,OAAI,SAAAC,GAAM,MACpC,oBAAXA,EAAwBA,EAAOxF,EAAUsF,GAAYC,EAAKC,MCC7DC,GAAe,GAmBNC,GAjBU,WAA8C,IAA7C/D,EAA4C,uDAApC8D,GAAoC,yCAApB3G,EAAoB,EAApBA,KAAMe,EAAc,EAAdA,QACtD,OAAQf,GACN,KAAKK,EAAYI,cACf,OAAOM,EAAQuB,MACjB,KAAKjC,EAAYC,YACf,MAAM,GAAN,oBAAWuC,GAAX,CAAkB9B,EAAQE,OAC5B,KAAKZ,EAAYE,YACf,OAAOsC,EAAMkC,QAAO,SAAA9D,GAAI,OAAIA,EAAK3B,KAAOyB,EAAQzB,MAClD,KAAKe,EAAYG,YACf,OAAOqC,EAAML,KAAI,SAAAvB,GAAI,OACnBA,EAAK3B,KAAOyB,EAAQsE,YAAY/F,GAAKyB,EAAQsE,YAAcpE,KAE/D,QACE,OAAO4B,ICfP8D,GAAe,GAaNC,GAXU,WAA8C,IAA7C/D,EAA4C,uDAApC8D,GAAoC,yCAApB3G,EAAoB,EAApBA,KAAMe,EAAc,EAAdA,QACtD,OAAQf,GACN,KAAKK,EAAYM,eACf,MAAM,GAAN,oBAAWkC,GAAX,CAAkB9B,EAAQ+D,UAC5B,KAAKzE,EAAYO,iBACf,OAAOG,EAAQ+B,SACjB,QACE,OAAOD,ICEEgE,GATM,WAA8C,IAA7ChE,EAA4C,uDAF7C,GAE6C,yCAApB7C,EAAoB,EAApBA,KAAMe,EAAc,EAAdA,QAClD,OAAQf,GACN,KAAKK,EAAYQ,UACf,OAAOE,EAAQhB,MACjB,QACE,OAAO8C,ICQEiE,GAbQ,WAAqC,IAApCjE,EAAmC,iGAAX7C,EAAW,EAAXA,KAC9C,OAAQA,GACN,KAAKK,EAAYK,cACf,OAAO,EACT,KAAKL,EAAYI,cAEjB,KAAKJ,EAAYQ,UACf,OAAO,EACT,QACE,OAAOgC,ICDEkE,GANSC,2BAAgB,CACtC1E,MAAOsE,GACP9D,SAAUmE,GACVlH,MAAO8G,GACPxE,QAASyE,KCLLI,GAAmBC,+BAAoBC,2BAAgBb,KAE9Cc,GADDC,uBAAYP,GAAiBG,ICC3CK,IAASC,OACP,kBAAC,IAAD,CAAUH,MAAOA,IACf,kBAAC,IAAD,CAAYI,SAAS,KACnB,kBAAC,IAAD,CAAOxB,UAAWJ,OAGtB6B,SAASC,eAAe,W","file":"static/js/main.bc4d624f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navlink\":\"Header_navlink__rLo-v\",\"activeNav\":\"Header_activeNav__37oiy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsHourglass\":\"Loader_ldsHourglass__Valj_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navlink\":\"PostItem_navlink__2Jafm\"};","import React from 'react';\nimport styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport styles from './Header.module.css';\n\nconst StyledHeader = styled.header`\n  display: flex;\n  padding: 20px;\n  background-color: #a0c2ab;\n  color: #fff;\n  justify-content: space-around;\n  max-width: 100%;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\nconst StyledNavigation = styled.nav`\n  display: flex;\n  flex-direction: row;\n`;\nconst StyledList = styled.ul`\n  display: flex;\n  min-width: 300px;\n  list-style: none;\n  font-size: 24px;\n  justify-content: space-between;\n`;\nconst Title = styled.h1`\n  text-transform: uppercase;\n  font-weight: 300;\n`;\n\nconst Header = () => {\n  return (\n    <StyledHeader>\n      <Title> My blog app </Title>\n\n      <StyledNavigation>\n        <StyledList>\n          <li>\n            <NavLink\n              exact\n              to=\"/\"\n              activeClassName={styles.activeNav}\n              className={styles.navlink}\n            >\n              Main\n            </NavLink>\n          </li>\n\n          <li>\n            <NavLink\n              to=\"/posts\"\n              activeClassName={styles.activeNav}\n              className={styles.navlink}\n            >\n              All posts\n            </NavLink>\n          </li>\n        </StyledList>\n      </StyledNavigation>\n    </StyledHeader>\n  );\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport uuid4 from 'uuid';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n// minified version is also included\n// import 'react-toastify/dist/ReactToastify.min.css';\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 16px;\n  width: 1100px;\n  height: 400px;\n  margin: 0 auto;\n  border-radius: 2px;\n  margin-top: 20px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\nconst StyledInput = styled.textarea`\n  width: 1000px;\n  height: 30px;\n  margin: 0 auto;\n  font-size: 22px;\n  border-radius: 10px;\n  margin-top: 20px;\n  font-weight: 300;\n  padding: 10px;\n  resize: none;\n  outline: none;\n`;\nconst StyledTextarea = styled.textarea`\n  width: 1000px;\n  height: 50px;\n  margin: 0 auto;\n  padding: 10px;\n  font-size: 20px;\n  border-radius: 10px;\n  height: 230px;\n  resize: none;\n  font-weight: 300;\n  outline: none;\n  margin-top: 20px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\nconst StyledButton = styled.button`\n  padding: 10px;\n  color: #fff;\n  background-color: #1e8a71;\n  width: 300px;\n  margin: 0 auto;\n  margin-top: 30px;\n  text-align: center;\n  font-weight: 300;\n  font-size: 20px;\n  text-transform: uppercase;\n  border: none;\n  border-radius: 10px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nconst Form = ({ createPost }) => {\n  const [postTitle, setPostTitle] = useState('');\n  const [postText, setPostText] = useState('');\n\n  const handleTitleChange = e => {\n    setPostTitle(e.target.value);\n  };\n  const handleTextChange = e => {\n    setPostText(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (postTitle && postText) {\n      const newPost = {\n        id: uuid4(),\n        title: postTitle,\n        body: postText,\n      };\n      createPost(newPost);\n      toast.info(`New post \"${postTitle}\" was successfully created!`, {\n        position: toast.POSITION.BOTTOM_CENTER,\n      });\n      setPostTitle('');\n      setPostText('');\n    } else {\n      toast.error('Please, fill all fields!', {\n        position: toast.POSITION.BOTTOM_CENTER,\n      });\n    }\n  };\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <StyledInput\n        type=\"text\"\n        onChange={handleTitleChange}\n        value={postTitle}\n        placeholder=\"Enter post title here...\"\n      />\n      <StyledTextarea\n        type=\"text\"\n        onChange={handleTextChange}\n        value={postText}\n        placeholder=\"Enter text here...\"\n      />\n      <StyledButton type=\"submit\"> create post </StyledButton>\n\n      <ToastContainer />\n    </StyledForm>\n  );\n};\nForm.propTypes = {\n  createPost: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","const actionTypes = {\n  CREATE_POST: 'CREATE_POST',\n  DELETE_POST: 'DELETE_POST',\n  UPDATE_POST: 'UPDATE_POST',\n  GET_ALL_POSTS: 'GET_ALL_POSTS',\n  POSTS_LOADING: 'POSTS_LOADING',\n  CREATE_COMMENT: 'CREATE_COMMENT',\n  GET_ALL_COMMENTS: 'GET_ALL_COMMENTS',\n  SET_ERROR: 'SET_ERROR',\n};\nexport default actionTypes;\n","import actionTypes from '../../actionTypes';\n\nexport const getAllPostsActionCreator = posts => ({\n  type: actionTypes.GET_ALL_POSTS,\n  payload: {\n    posts,\n  },\n});\n\nexport const loadingActionCreator = () => ({\n  type: actionTypes.POSTS_LOADING,\n});\n\nexport const createPostActionCreator = post => ({\n  type: actionTypes.CREATE_POST,\n  payload: {\n    post,\n  },\n});\n\nexport const postErrorActionCreator = error => ({\n  type: actionTypes.SET_ERROR,\n  payload: {\n    error,\n  },\n});\n\nexport const deletePostActionCreator = id => ({\n  type: actionTypes.DELETE_POST,\n  payload: {\n    id,\n  },\n});\n\nexport const updatePostActionCreator = updatedPost => ({\n  type: actionTypes.UPDATE_POST,\n  payload: {\n    updatedPost,\n  },\n});\n","import axios from 'axios';\nimport {\n  createPostActionCreator,\n  postErrorActionCreator,\n} from '../actions/postsListActionCreators';\n\nconst createPostOperation = post => dispatch => {\n  axios\n    .post('https://bloggy-api.herokuapp.com/posts', post)\n    .then(response => {\n      dispatch(createPostActionCreator(response.data));\n    })\n    .catch(error => {\n      dispatch(postErrorActionCreator(error));\n    });\n};\nexport default createPostOperation;\n","import { connect } from 'react-redux';\nimport Form from './Form';\nimport createPostOperation from '../../redux/posts/operations/createPostOperation';\n\nconst mapDispatchToProps = dispatch => ({\n  createPost: post => dispatch(createPostOperation(post)),\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(Form);\n","import React from 'react';\nimport Form from '../../components/Form/FormContainer';\n\nconst Main = () => {\n  return (\n    <div>\n      <Form />\n    </div>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport styles from './Loader.module.css';\n\nconst Loader = () => <div className={styles.ldsHourglass}> </div>;\nexport default Loader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport styles from './PostItem.module.css';\n\nconst StyledButton = styled.button`\n  border-radius: 2px;\n  border: none;\n  color: #fff;\n  cursor: pointer;\n  text-decoration: none;\n  width: 130px;\n  font-size: 17px;\n  height: 30px;\n  background: #92929c;\n`;\nconst StyledButtonDiv = styled.div`\n  display: flex;\n  justify-content: space-around;\n`;\nconst PostItem = ({ id, title, text, onDelete }) => {\n  const handleDelete = () => {\n    onDelete(id);\n  };\n  const handleEdit = () => {};\n  return (\n    <div>\n      <h3> {title} </h3> <p> {text} </p>\n      <StyledButtonDiv>\n        <StyledButton type=\"button\" onClick={handleEdit}>\n          <NavLink to={`/posts/${id}`} className={styles.navlink}>\n            Open\n          </NavLink>\n        </StyledButton>\n\n        <StyledButton type=\"button\" onClick={handleDelete}>\n          Delete\n        </StyledButton>\n      </StyledButtonDiv>\n    </div>\n  );\n};\nPostItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n};\nexport default PostItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Loader from '../../components/Loader/Loader';\n\nimport PostItem from './PostItem/PostItem';\n\nconst StyledList = styled.ul`\n  margin: 0 auto;\n  margin-top: 30px;\n  max-width: 1400px;\n  text-align: center;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  list-style: none;\n  border-radius: 2px;\n`;\nconst StyledListItem = styled.ul`\n  width: 400px;\n  word-wrap: break-word;\n  padding: 25px;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\nconst PostsPage = ({ loading, posts, deletePost }) => {\n  return (\n    <section>\n      {loading && <Loader />}\n\n      {posts && (\n        <StyledList>\n          {posts.map(post => (\n            <StyledListItem key={post.id}>\n              <PostItem\n                id={post.id}\n                title={post.title}\n                text={post.body}\n                onDelete={deletePost}\n              />\n            </StyledListItem>\n          ))}\n        </StyledList>\n      )}\n    </section>\n  );\n};\n\nPostsPage.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  loading: PropTypes.bool.isRequired,\n  deletePost: PropTypes.func.isRequired,\n};\n\nexport default PostsPage;\n","import axios from 'axios';\nimport {\n  deletePostActionCreator,\n  postErrorActionCreator,\n} from '../actions/postsListActionCreators';\n\nconst deletePostOperation = id => dispatch => {\n  axios\n    .delete(`https://bloggy-api.herokuapp.com/posts/${id}`)\n    .then(() => {\n      dispatch(deletePostActionCreator(id));\n    })\n    .catch(error => {\n      dispatch(postErrorActionCreator(error));\n    });\n};\nexport default deletePostOperation;\n","import { connect } from 'react-redux';\nimport PostsPage from './PostsPage';\nimport deletePostOperation from '../../redux/posts/operations/deletePostOperation';\n\nconst mapStateToProps = state => ({\n  posts: state.posts,\n  comments: state.comments,\n  loading: state.loading,\n});\nconst mapDispatchToProps = dispatch => ({\n  deletePost: id => dispatch(deletePostOperation(id)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(PostsPage);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n// minified version is also included\n// import 'react-toastify/dist/ReactToastify.min.css';\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 16px;\n  width: 1100px;\n  height: 300px;\n  margin: 0 auto;\n  border-radius: 2px;\n  margin-top: 20px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\nconst StyledInput = styled.input`\n  width: 1000px;\n  height: 30px;\n  margin: 0 auto;\n  font-size: 22px;\n  border-radius: 10px;\n  border: 1px solid #354854;\n  margin-top: 20px;\n  font-weight: 300;\n  padding: 15px;\n  resize: none;\n  outline: none;\n`;\nconst StyledTextarea = styled.textarea`\n  width: 1000px;\n  height: 50px;\n  margin: 0 auto;\n  padding: 10px;\n  font-size: 20px;\n  border-radius: 10px;\n  height: 230px;\n  resize: none;\n  font-weight: 300;\n  outline: none;\n  border: 1px solid #354854;\n  margin-top: 20px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\nconst StyledButton = styled.button`\n  padding: 7px;\n  color: #fff;\n  background-color: #1e8a71;\n  width: 200px;\n  margin: 0 auto;\n  margin-top: 30px;\n  text-align: center;\n  font-weight: 300;\n  font-size: 16px;\n  text-transform: uppercase;\n  border: none;\n  border-radius: 10px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  :disabled {\n    color: #c6d3c6;\n    opacity: 0.4;\n    background: #92929c;\n  }\n`;\nconst StyledCommentsTitle = styled.h3`\n  color: #354854;\n`;\nconst StyledCommentsDiv = styled.div`\n  color: #354854;\n  text-align: center;\n  margin: 0 auto;\n  width: 1100px;\n`;\nconst StyledCommentsUl = styled.ul`\n  text-align: center;\n  margin: 0 auto;\n  padding: 10px;\n  width: 1000px;\n  list-style: none;\n`;\nconst StyledCommentsLI = styled.li`\n  padding: 5px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\nconst StyledCommentForm = styled.form`\n  display: flex;\n  flex-direction: row;\n  margin: 0 auto;\n  width: 1000px;\n  margin-top: 20px;\n  border-radius: 2px;\n`;\nconst StyledCommentInput = styled.input`\n  height: 30px;\n  width: 700px;\n  padding: 3px;\n  border-radius: 10px;\n  font-size: 17px;\n`;\nconst StyledButtonComment = styled.button`\n  padding: 7px;\n  color: #fff;\n  cursor: pointer;\n  background-color: #1e8a71;\n  width: 200px;\n  margin: 0 auto;\n  text-align: center;\n  font-weight: 300;\n  font-size: 16px;\n  text-transform: uppercase;\n  border: none;\n  border-radius: 10px;\n`;\nclass PostEditForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      buttonSaveDisabled: true,\n      postTitle: '',\n      postText: '',\n      commentText: '',\n      commentsAboutPost: false,\n    };\n  }\n\n  componentDidMount() {\n    const { posts, match, comments } = this.props;\n\n    // check post with ID from url\n\n    const post = posts.find(postFormList =>\n      typeof postFormList.id === 'string'\n        ? postFormList.id === match.params.id\n        : postFormList.id === Number(match.params.id),\n    );\n    this.setState({\n      postTitle: post && post.title,\n      postText: post && post.body,\n    });\n\n    // check comments available\n    const comment = comments.filter(\n      commentItem => commentItem.postId === match.params.id,\n    );\n    this.setState({\n      commentsAboutPost: comment,\n    });\n  }\n\n  handleTitleChange = e => {\n    this.setState({\n      buttonSaveDisabled: false,\n      postTitle: e.target.value,\n    });\n  };\n\n  handleTextChange = e => {\n    this.setState({\n      buttonSaveDisabled: false,\n      postText: e.target.value,\n    });\n  };\n\n  handleSaveEdition = e => {\n    const { postTitle, postText } = this.state;\n    const { match } = this.props;\n    e.preventDefault();\n    if (postTitle && postText) {\n      const editedPost = {\n        id: match.params.id,\n        title: postTitle,\n        body: postText,\n      };\n      this.props.updatePost(editedPost);\n      toast.info(`New post \"${postTitle}\" was successfully edited!`, {\n        position: toast.POSITION.BOTTOM_CENTER,\n      });\n    } else {\n      toast.error('Please, fill all fields!', {\n        position: toast.POSITION.BOTTOM_CENTER,\n      });\n    }\n  };\n\n  handleCommentTyping = e => {\n    this.setState({\n      commentText: e.target.value,\n    });\n  };\n\n  addComment = () => {\n    const { commentText, commentsAboutPost } = this.state;\n    const { addComment, match } = this.props;\n\n    const requestComment = {\n      postId: match.params.id,\n      body: commentText,\n    };\n    addComment(requestComment);\n    this.setState({\n      commentText: '',\n      commentsAboutPost: [...commentsAboutPost, requestComment],\n    });\n  };\n\n  render() {\n    const {\n      postText,\n      postTitle,\n      buttonSaveDisabled,\n      commentText,\n      commentsAboutPost,\n    } = this.state;\n    const { posts } = this.props;\n\n    return (\n      <div>\n        {posts && (\n          <StyledForm>\n            <StyledInput\n              type=\"text\"\n              onChange={this.handleTitleChange}\n              value={postTitle}\n            />\n\n            <StyledTextarea\n              type=\"text\"\n              onChange={this.handleTextChange}\n              value={postText}\n            />\n\n            <StyledButton\n              type=\"button\"\n              onClick={this.handleSaveEdition}\n              disabled={buttonSaveDisabled}\n            >\n              Save changes\n            </StyledButton>\n          </StyledForm>\n        )}\n\n        <section>\n          {commentsAboutPost.length > 0 && (\n            <StyledCommentsDiv>\n              <StyledCommentsTitle> Comments: </StyledCommentsTitle>\n\n              <StyledCommentsUl>\n                {commentsAboutPost.map(comment => (\n                  <StyledCommentsLI key={comment.id}>\n                    <p> {comment.body} </p>\n                  </StyledCommentsLI>\n                ))}\n              </StyledCommentsUl>\n            </StyledCommentsDiv>\n          )}\n\n          <StyledCommentForm onSubmit={this.addComment}>\n            <StyledCommentInput\n              type=\"text\"\n              onChange={this.handleCommentTyping}\n              value={commentText}\n              placeholder=\"Enter your comment here\"\n            />\n            <StyledButtonComment type=\"submit\">Add comment</StyledButtonComment>\n          </StyledCommentForm>\n        </section>\n\n        <StyledButton>\n          <NavLink to=\"/posts\"> Back to all posts </NavLink>\n        </StyledButton>\n\n        <ToastContainer />\n      </div>\n    );\n  }\n}\nPostEditForm.propTypes = {\n  comments: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  addComment: PropTypes.func.isRequired,\n  match: PropTypes.shape().isRequired,\n  posts: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  updatePost: PropTypes.func.isRequired,\n};\nexport default PostEditForm;\n","import axios from 'axios';\nimport {\n  updatePostActionCreator,\n  postErrorActionCreator,\n} from '../actions/postsListActionCreators';\n\nconst updatePostOperation = updatedPost => dispatch => {\n  axios\n    .put(\n      `https://bloggy-api.herokuapp.com/posts/${updatedPost.id}`,\n      updatedPost,\n    )\n    .then(() => {\n      dispatch(updatePostActionCreator(updatedPost));\n    })\n    .catch(error => {\n      dispatch(postErrorActionCreator(error));\n    });\n};\nexport default updatePostOperation;\n","import axios from 'axios';\nimport { addCommentActionCreator } from '../actions/commentActionCreators';\n\nconst addCommentOperation = comment => dispatch => {\n  axios\n    .post(`https://bloggy-api.herokuapp.com/comments`, comment)\n    .then(response => dispatch(addCommentActionCreator(response.data)))\n    .catch(error => console.log(error));\n};\nexport default addCommentOperation;\n","import actionTypes from '../../actionTypes';\n\nexport const addCommentActionCreator = comment => ({\n  type: actionTypes.CREATE_COMMENT,\n  payload: {\n    comment,\n  },\n});\nexport const getAllCommentsActionCreator = comments => ({\n  type: actionTypes.GET_ALL_COMMENTS,\n  payload: {\n    comments,\n  },\n});\nexport const deleteCommentActionCreator = comments => ({\n  type: actionTypes.DELETE_COMMENT,\n  payload: {\n    comments,\n  },\n});\n","import { connect } from 'react-redux';\nimport PostEditForm from './PostEditForm';\nimport updatePostOperation from '../../../redux/posts/operations/updatePostOperation';\nimport addCommentOperation from '../../../redux/comments/operations/addCommentOperation';\n\nconst mapStateToProps = state => ({\n  posts: state.posts,\n  comments: state.comments,\n});\nconst mapDispatchToProps = dispatch => ({\n  updatePost: updatedPost => dispatch(updatePostOperation(updatedPost)),\n  addComment: comment => dispatch(addCommentOperation(comment)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(PostEditForm);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Header from './Header/Header';\nimport Main from '../pages/Main/Main';\nimport PostsPage from '../pages/PostsPage/PostsPageContainer';\nimport PostEditForm from '../pages/PostsPage/PostEditForm/PostEditFormContainer';\n\nconst StyledWrapper = styled.div`\n  padding: 0;\n  margin: 0;\n  font-family: 'Raleway';\n`;\nclass App extends Component {\n  componentDidMount() {\n    const { getAllPosts, getAllComments } = this.props;\n    getAllPosts();\n    getAllComments();\n  }\n\n  render() {\n    return (\n      <StyledWrapper>\n        <Header />\n        <Switch>\n          <Route path=\"/\" exact component={Main} />\n\n          <Route path=\"/posts/:id\" exact component={PostEditForm} />\n\n          <Route path=\"/posts\" component={PostsPage} />\n\n          <Redirect\n            to=\"/\n      \"\n          />\n        </Switch>\n      </StyledWrapper>\n    );\n  }\n}\n\nApp.propTypes = {\n  getAllPosts: PropTypes.func.isRequired,\n  getAllComments: PropTypes.func.isRequired,\n};\n\nexport default App;\n","import axios from 'axios';\nimport {\n  loadingActionCreator,\n  getAllPostsActionCreator,\n  postErrorActionCreator,\n} from '../actions/postsListActionCreators';\n\nconst getAllPostsOperation = () => dispatch => {\n  dispatch(loadingActionCreator());\n  axios\n    .get('https://bloggy-api.herokuapp.com/posts')\n    .then(response => {\n      dispatch(getAllPostsActionCreator(response.data));\n    })\n    .catch(error => {\n      dispatch(postErrorActionCreator(error));\n    });\n};\nexport default getAllPostsOperation;\n","import axios from 'axios';\nimport { getAllCommentsActionCreator } from '../actions/commentActionCreators';\n\nconst getAllCommentsOperation = () => dispatch => {\n  axios\n    .get('https://bloggy-api.herokuapp.com/comments')\n    .then(result => dispatch(getAllCommentsActionCreator(result.data)));\n};\nexport default getAllCommentsOperation;\n","import { connect } from 'react-redux';\nimport App from './App';\nimport getAlLPostsOperation from '../redux/posts/operations/getAllPostsOperation';\nimport getAllCommentsOperation from '../redux/comments/operations/getAllCommentsOperation';\n\nconst mapDispatchToProps = dispatch => ({\n  getAllPosts: posts => dispatch(getAlLPostsOperation(posts)),\n  getAllComments: comments => dispatch(getAllCommentsOperation(comments)),\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(App);\n","const thunk = ({ dispatch, getState }) => next => action =>\n  typeof action === 'function' ? action(dispatch, getState) : next(action);\nexport default thunk;\n","import actionTypes from '../../actionTypes';\n\nconst initialState = [];\n\nconst postsListReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case actionTypes.GET_ALL_POSTS:\n      return payload.posts;\n    case actionTypes.CREATE_POST:\n      return [...state, payload.post];\n    case actionTypes.DELETE_POST:\n      return state.filter(post => post.id !== payload.id);\n    case actionTypes.UPDATE_POST:\n      return state.map(post =>\n        post.id === payload.updatedPost.id ? payload.updatedPost : post,\n      );\n    default:\n      return state;\n  }\n};\n\nexport default postsListReducer;\n","import actionTypes from '../../actionTypes';\n\nconst initialState = [];\n\nconst postsListReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case actionTypes.CREATE_COMMENT:\n      return [...state, payload.comment];\n    case actionTypes.GET_ALL_COMMENTS:\n      return payload.comments;\n    default:\n      return state;\n  }\n};\n\nexport default postsListReducer;\n","import actionTypes from '../../actionTypes';\n\nconst initialState = '';\n\nconst errorReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case actionTypes.SET_ERROR:\n      return payload.error;\n    default:\n      return state;\n  }\n};\n\nexport default errorReducer;\n","import actionTypes from '../../actionTypes';\n\nconst initialState = false;\n\nconst loadingReducer = (state = initialState, { type }) => {\n  switch (type) {\n    case actionTypes.POSTS_LOADING:\n      return true;\n    case actionTypes.GET_ALL_POSTS:\n      return false;\n    case actionTypes.SET_ERROR:\n      return false;\n    default:\n      return state;\n  }\n};\n\nexport default loadingReducer;\n","import { combineReducers } from 'redux';\nimport postsListReducer from './posts/reducers/postsListReducer';\nimport commentsReducer from './comments/reducers/commentsReducer';\nimport errorReducer from './posts/reducers/errorReducer';\nimport loadingReducer from './posts/reducers/loadingReducer';\n\nconst combinedReducer = combineReducers({\n  posts: postsListReducer,\n  comments: commentsReducer,\n  error: errorReducer,\n  loading: loadingReducer,\n});\nexport default combinedReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from './middlewares/thunk';\nimport combinedReducer from './combinedReducer';\n\nconst composeEnhancers = composeWithDevTools(applyMiddleware(thunk));\nconst store = createStore(combinedReducer, composeEnhancers);\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter, Route } from 'react-router-dom';\nimport App from './components/AppContainer';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter basename=\"/\">\n      <Route component={App} />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}